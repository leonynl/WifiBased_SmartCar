/*
  【Arduino】168种传感器模块系列实验（资料代码+仿真编程+图形编程）
  实验一百二十五： 升级版 WeMos D1 R2 WiFi UNO 开发板 基于ESP8266
  项目十一：创建一个服务器实例，在手机浏览器输入1关灯，输入0开灯
*/

#include <ESP8266WiFi.h>

const char* ssid = "LEON_501";
const char* password = "Lovepass501@";

// 创建一个服务器实例
// 指定要监听的端口作为参数
WiFiServer server(80);

void setup() {
  Serial.begin(115200);
  delay(10);

  // prepare GPIO2
  pinMode(2, OUTPUT);
  digitalWrite(2, 0);

  // 连接到 WiFi 网络
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");

  // 启动服务器
  server.begin();
  Serial.println("Server started @ ");

  // 打印 IP 地址和说明
  Serial.println(WiFi.localIP());
  Serial.println("To control GPIO, open your web browser.");
  Serial.println("To set GPIO 2 high, type:");
  Serial.print(WiFi.localIP());
  Serial.println("/gpio/1");
  Serial.println("To set GPIO 2 low, type:");
  Serial.print(WiFi.localIP());
  Serial.println("/gpio/0");
  Serial.println("To toggle GPIO 2, type:");
  Serial.print(WiFi.localIP());
  Serial.println("/gpio/4");
}

void loop() {
  // 检查客户端是否已连接
  WiFiClient client = server.available();
  if (!client) {
    delay(100);
    return;
  }

  // Commented out by BB as gets stuck in while loop.
  // Wait until the client sends some data
  //Serial.println("new client");
  //while(!client.available()){
  //  delay(1);
  //}

  // 读取请求的第一行
  String req = client.readStringUntil('\r');
  Serial.println(req);
  client.flush();

  // 匹配请求
  int val;
  if (req.indexOf("/gpio/1") != -1) {
    val = 1;
    Serial.println("Get 1");
  }
  else if (req.indexOf("/gpio/0") != -1) {
    val = 0;
    Serial.println("Get 0");
  }
  else if (req.indexOf("/gpio/4") != -1) {
    val = (!digitalRead(2)); // Flip the GPIO 2.
    Serial.println("Get 4");
  }
  else {
    Serial.println("invalid request");
    client.print("HTTP/1.1 404\r\n");
    client.stop();
    return;
  }

  // Set GPIO2 according to the request
  digitalWrite(2, val);

  client.flush();

  // 准备响应
  String s = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n<!DOCTYPE HTML>\r\n<html>\r\nGPIO is now ";
  s += (val) ? "high" : "low";
  s += "</html>\n";

  // 将响应发送给客户端
  client.print(s);
  delay(1);
  client.stop();
  Serial.println("Client disonnected");

  // 客户端实际上会断开连接
  // 当函数返回并且 'client' 对象被销毁时
}
